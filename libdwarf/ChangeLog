<<<<<<< HEAD
2018-09-29  David Anderson
     * gennames.c:  Fixed an indent issue in a comment.
2018-09-28  Carlos Alberto Enciso
     * dwgetopt: Use size_t to remove conversion warning 
       on Windows platform.
     * getnames.c: Generate '#ifdef __cplusplus/#endif' 
       include guards to
       allow the inclusion of header files by C++ code.
2018-09-21  David Anderson
    * CMakeLists.txt: Add dwarf_generic_init.c into 
      sources list.
    * Makefile.am: Ensure all cmake files get into
      releases.
2018-09-18  David Anderson
    * dwarf_generic_init.c: Moved dwarf_finish() here
      from dwarf_original_elf_init.c.
    * dwarf_original_elf.c: Moved dwarf_finish() out of
      this file.
    * dwarf_init_finish.c: Corrected a comment. frmo->from
2018-09-18  David Anderson
    * dwarf_generic_init.c: Moved dwarf_init() and dwarf_init_b()
      to this new file. From dwarf_original_elf_init.c.
      These functions will allow handling non-elf object DWARF
      in the future.
    * dwarf_original_elf_init.c: Functions moved to 
      dwarf_generic_init.c and _dwarf_elf_init_file_ownership 
      no longer static so
      it can be called from dwarf_generic_init.c.
    * Makefile.am: Add the new source file to the sources list.
2018-09-12  David Anderson
    * dwarf_version.h: Updated date string.
    * libdwarf.h.in: Corrected the use of
      HAVE_NONSTANDARD_PRINTF_64_FORMAT.
2018-09-11  David Anderson
    * libdwarf.h.in: Restored use of
      HAVE_NONSTANDARD_PRINTF_64_FORMAT
      for those needing that feature.
2018-09-06  Carlos Alberto Enciso
     * dwarf_tsearchhash.c: Use the C99 PRIxPTR macro to print zero padded
       pointers, to remove warning C4477 on Windows platform.
     * dwgetopt: Use size_t to remove conversion warning on Windows platform.
     * getnames.c: Generate '#ifdef __cplusplus/#endif' include guards to
       allow the inclusion of header files by C++ code.
2018-09-02 David Anderson
    * Makefile.am: Changed the way to build gennames
      executable to the automake way, eliminating make warnings
      when building.
    * Makefile.in: regenerated.
2018-08-23 David Anderson
    * CMakeLists.txt: Adjusted to fit new/changed file names.
2018-08-21 David Anderson
    * Makefile.am: Now honors --enable-wall.
    * dwarf_die_deliv.c,pro_section.c: Removed unused local variables.
2018-08-14 David Anderson
    * libdwarf.h.in: DW_HARMLESS_ERROR_MSG_STRING_SIZE now
      300, c compiler noted 200 was too small for a 
      harmless-error sprintf string in dwarf_frame2.c (line 192).
    * Makefile.am.  Added CPPFLAGS_FOR_BUILD where it was
      accidentally omitted.
    * libdwarf_version.h: Updated the version date string.
2018-08-09 David Anderson
    * Makefile.am: Added AM_TESTS_ENVIRONMENT enabling
      make check from any build directory. 
      Also,add dwarf_test_errmsg_list.c to the files 
      in a release so make check can work
    * runtests.sh: Handle the environment variable
      AM_TESTS_ENVIRONMENT sets: DWTOPSRCDIR
2018-08-07 David Anderson
    * libdwarf2.1.mm: Revised the argument list of 
      dwarf_get_real_section_name() to add compression
      size information.
    * libdwarf2.1.pdf: Regenerated version 2.67.
    * dwarf_die_deliv.c: Added compression-size arguments
      to call to
      dwarf_get_real_section_name() and updated the string
      additions to match.
    * dwarf_init_finish.c: Update compression before/after
      sizes in new fields dss_compressed_length 
      dss_uncompressed_length..
    * dwarf_opaque.h: Add the new dss_ fields.
    * libdwarf.h.in: Revised prototype of
      dwarf_get_real_section_name()
2018-08-06 David Anderson
    * libdwarf2.1.mm: Revised the argument list of 
      dwarf_get_real_section_name()
      so it works properly.
    * libdwarf2.1.pdf: Regenerated version 2.66.
    * dwarf_die_deliv.c: Added third argument to call to
      dwarf_get_real_section_name() and updated the string
    * dwarf_opaque.h: Added flag dss_ZLIB_compressed so we can report
      compression more accurately.
2018-08-05 David Anderson
    * dwarf_die_deliv.c: Was failing to report SHF_COMPRESSED in dwarfdump
      do to mistake here (statement with no side effect!).
2018-08-05 David Anderson
    * libdwarf_version.h: Updated version string.
    * dwarf_errmsg_list.h: Support the new error code.
    * dwarf_opaque.h: Fields to support dwarf_get_real_section_name().
    * dwarf_die_deliv.c: Implements dwarf_get_real_section_name().
    * dwarf_init_finish.c: Changes to support dwarf_get_real_section_name().
    * libdwarf.h.in: Declare dwarf_get_real_section_name(). Add
      a new error code.
    * libdwarf2.1.mm: Document dwarf_get_real_section_name().
    * libdwarf2.1.pdf: Regenerate. Version 2.65.
2018-08-04 David Anderson
    * dwarf_util.h: Remove trailing whitespace.
    * pro_dnames.h: Preliminary structs for writing .debug_names
    * pro_section.c: Corrected a comment. Removed some debug
      code. Fixed indent mistakes.
    * pro_opaque.h: Fixed indent error.
    * pro_init.c: Extracted Bernstein hash into its own function.
      Fixed indent errors.
2018-08-02 David Anderson
    * libdwarf_version.h: Updated version date.
    * pro_section.c: #if 0 or comment out
      some debug code.
    * dwarf_util.c:Replaced accidental loss of 'do'.
    * Makefile.am: Removed unused variables and references
      to them.
2018-07-31 David Anderson
    * Makefile.am: Move all but libdwarf*pdf out of the
      /usr/local/share install set, keep them all in the
      distribution set.
2018-07-31 David Anderson
    * Makefile.am: add pro_dnames.h pro_dnames.c for
      .debug_names support..
    * dwarf_errmsg_list.h: Add DW_DLE_DUP_ATTR_ON_DIE error
      code.
    * dwarf_frame2.c:  Move qsort_compare up to top of
      file to avoid a forward declaration.
    * dwarf_init_finish.c: Additional comments.
    * dwarf_util.c:  Corrected comment. Moved local
      variable declarations down to where needed.
    * libdwarf.h.in: Declare new function
      dwarf_force_debug_names() used for testing.
    * pro_die.h: Add comment. 
    * pro_dnames.c: Remove junk whitespace.
    * pro_forms.c(_dwarf_pro_add_at_to_die):
      Add DW_AT_data_member_location, DW_AT_trampoline
      to the allowed set.
    * pro_opaque.h: Add de_dnames_sect to Dwarf_P_Debug_s.
    * pro_section.c: Now sorts abbreviations by attribute 
      number.  Refactors header generation to make
      it easier to read the code. Refactors
      _dwarf_pro_getabbrev() for clarity (using newly-sorted
      abbreviation list).
2018-07-30 David Anderson
    * pro_dnames.c, pro_dnames.h: New, these just placeholders
      for the moment. To write out .debug_names.
2018-08-02 David Anderson
    * Makefile.am: Removed unused variables and references
      to them.

2018-07-24 David Anderson
    * libdwarf_version.h: Updated version string.
    * dwarf_line_table_reader_common.h:Removed trailing whitespace
      and fixed indentations.
    * pro_line.c: Removed trailing whitespace.
    * pro_reloc.c,pro_reloc.h: Defines 
      _dwarf_pro_pre_alloc_specific_reloc_slots().
      Deletes _dwarf_pro_pre_alloc_n_reloc_slots()
    * pro_reloc_symbolic.c: Now uses 
      _dwarf_pro_pre_alloc_specific_reloc_slots()  so
      static analysis can understand what the code does.
      Fixes Coverity CID 186978.
    * pro_arange.c: Now uses  
      _dwarf_pro_pre_alloc_specific_reloc_slots
      instead of
      _dwarf_pro_pre_alloc_n_reloc_slots.
2018-07-24 David Anderson
    * dwarf_init_finish.c(set_up_section): A simple
      revision eliminates any copying and simplifies
      the logic. And eliminates the use of safe_strcpy().
    * dwarf_util.h, dwarf_util.c: Remove safe_strcpy().
2018-07-23 David Anderson
    * Makefile.am: Make it impossible for Make to build the 
      libdwarf pdf files. We do not want users to be required
      to have the pdf tools.
    * pdfbld.sh: A script to build the libdwarf pdf files
      when required (the .mm files rarely change).
2018-07-23 David Anderson
    * libdwarf_version.h: Updated version string.
    * pro_line.c: Added comments on the oddness 
      of some return values (signed vs unsigned and
      error returns).
    * dwarf_die_deliv.c: Removed a statement that
      had no effect (A leftover of recent changes).
    * gennames.c: Signed vs unsigned compare was accidental
      in the code this generates.
      Changed the local var to unsigned.
2018-07-22 David Anderson
    * dwarf_init_finish.c: Now calls _dwarf_safe_strcpy()
       so we are sure there is no string overrun.
    * dwarf_util.c: Implements _dwarf_safe_strcpy().
    * dwarf_util.h: Declares _dwarf_safe_strcpy().
2018-07-22 David Anderson
    * pro_reloc_symbolic.c(_dwarf_symbolic_relocs_to_disk): 
      Coverity CID 186884. A much cleaner and more
      readable fix.
2018-07-21 David Anderson
    * libdwarf_version.h: Updated version string.
    * dwarf_init_finish.c: Coverity CID 186884.
      Revised the logic for clarity and added comments
      too.
    * libdwarf_version.h: Update version string.
    * dwarf_dnames.c: Coverity CID 186887.
      Encapsulating
      DECODE_LEB128_UWORD_CK in a function
      so we can catch an error
      and free appropriate resources.
      Fixed cases of error where DW_DLV_OK returned.
    * dwarf_abbrev.c,dwarf_arange.c,dwarf_die_deliv.c,
      dwarf_ranges.c,dwarf_tsearchhash.c: 
      Removed trailing whitespace.
    * dwarf_xu_index.c: Coverity CID 186894.
      We know the string length (2) so we just assign the
      bytes directly avoiding any possibility of overrun.
    * pro_reloc_symbolic.c(_dwarf_symbolic_relocs_to_disk): 
      Coverity CID 186978.
      Was dereferencing a pointer after zeroing the
      pointer, now fixed and the obfuscating single-call
      function code moved to where used, deleted function.  
    * dwarf_macro.c: Coverity CID 186980.
      Removed code testing for zero count as it is impossible
      to get to that spot with count==0.
    * pro_forms.c: The new return of error is now
      return ((Dwarf_P_Attribute) DW_DLV_BADADDR);
      to at least avoid a warning about this
      necessary uglyness of pointer/integer confusion.
      The dwarf reader (consumer) interfaces have none
      of this.
2018-07-20 David Anderson
    * dwarf_line_table_reader_common.h: Encapsulating
      DECODE_LEB128_UWORD_CK in a function
      so we can catch an error
      and free appropriate resources.
2018-07-20 David Anderson
    * dwarf_frame.c: Coverity CID 186901.
      Removed duplicate check for dbg null.
    * dwarf_macro5.c: Coverity CID 186890.
      Was testing wrong status value. resattr -> lres
2018-07-20 David Anderson
    * dwarf_arange.c(dwarf_get_aranges_list): Coverity CID 186976. 
      This function has a serious problem, it reads agranges
      without knowing the CU version number so anything
      with segment_selector != 0 could be read wrong.
      Unless the compiler authors did in early versions
      what DWARF4 called for in aranges: a segment selector
      value.
    * dwarf_elf_access.c(update_entry): Coverity CID 187700. 
      If we do not have
      ELF64 symbol type available avoid letting us fall through
      to dereference a null pointer.
    * dwarf_print_lines.c(dwarf_print_lines): Coverity CID 186985.
      Coverity CID 186973
      Remove if(){} as it is not needed.
    * dwarf_macro.c(dwarf_get_macro_details): Coverity CID 186980.
      Removed dead code for count==0 as count will be at least 1.
    * pro_arange.c: Coverity CID 186974.
      Delete redundant check for null.
    * pro_section.c(dwarf_pro_getabbrev): Coverity CID 186983.
      Avoid dereferencing forms/attrs if they are null.
    * pro_forms.c(dwarf_add_AT_location_expr): Coverity CID 186984.
      Was potentially reading more from input than could
      possibly exist in the fixed-maximum-length input.
      Coverity CID 186975. Make block_size Dwarf_Unsigned
      to (possibly) avoid this warning.
    * pro_expr.c(dwarf_add_expr_gen): Coverity CID 186987.
      Add break; to the last case in the switch.
    * pro_macinfo.c(dwarf_vendor_ext): Coverity CID 186988.
      Coverity CIE 186981
      Deleting dead code.
    * pro_types.c(_dwarf_transform_simplename_to_disk)): 
      Coverity CID 186977. Delete dead code.
    * pro_init.c(common_init): Coverity CID 187001. Now we avoid
      dereferencing a potentially NULL pointer abiname.
    * pro_frame.c(dwarf_add_fde_inst): Coverity CID 186979.
      Added missing check of 'res' variable.
2018-07-20 David Anderson
    * libdwarf_version.h: Updated version string.
    * pro_frame.c: Coverity CID 186989. Dereferenced tmpaug
      before NULL check. Fixed.
    * pro_section.c: Coverity CID 186990. copy-paste error
      changed val_len to val_len2.
    * dwarf_abbrev.c: Coverity CID 186982. dwarf_get_abbrev_count()
      could leak Dwarf_Error. No longer can.
    * dwarf_print_lines.c: Coverity CID 186973. Remove useless code.
    * dwarf_ranges.c: Coverity CID 186909. Ensure null not
      dereferenced.
    * dwarf_dnames.c: Coverity CID 186899. If needed !firstdab, 
      not firstdab. Also, free local allocations on error.
    * dwarf_dsc.c: Coverity CID 186898. Null check on wrong variable.
    * dwarf_tsearchhash.c: Coverity CID 186893. Leak on error fixed.
    * dwarf_query.c: Coverity CID 186892. Testing res, now res3.
    * dwarf_macro5.c: Coverity CID 186891. Dead code moved to 
      correct place.
      Coverity CID 186906. Only increment curopsonly if non-null.
    * dwarf_dnames.c: Coverity CID 186889. Fixed leak on error.
    * dwarf_die_deliv.c: Coverity CID 186888. Fixed: Removed
      assignment overridden later.
      Coverity CID 186904: deref before: null check, dataptr,dis.
    * dwarf_frame2.c: Coverity CID 186885. Fixed: loop inappropriate.
      Coverity CID 186908. Fixed test res->resf.
    * dwarf_line_table_reader_common.h: Coverity CID 186886. 
      Fixed leak.
2018-07-16 David Anderson
    * dwarf_incl.h: Refine ifdef of HAVE_STDAFX_H.
    * dwarf_tsearch.h: Correcting web references in comments.
    * pro_incl.h: Refine ifdef of HAVE_STDAFX_H.
2018-07-16 David Anderson
    * Makefile.am: New, used by autotools to create configure.
    * configure.ac, Makefile.in, config.h.in: Deleted.
2018-07-09 David Anderson
    * dwarf_dnames.c: free(tmp) -> free(dab)
2018-06-19 David Anderson
    * configure.ac, config.h.in: Removed
      HAVE_NONSTANDARD_PRINTF_64_FORMAT.
    * configure: Regenerated.
2018-06-19 David Anderson
    * pro_util.h: Deleted unused sizeof_sbyte macro,
      simplified sizeof_ubyte to 1.
2018-06-19 David Anderson
    * dwarf_base_types.h,dwarf_die_deliv.c,dwarf_dnames.c,
      dwarf_form.c,dwarf_frame.c,dwarf_frame2.c,dwarf_init_finish.c,
      dwarf_loc2.h,dwarf_macro5.c,dwarf_query.c,dwarf_str_offsets.c,
      dwarf_util.c,pro_opaque.h: Now defining using 
      DWARF_32BIT_SIZE DWARF_64BIT_SIZE DWARF_HALF_SIZE
      instead of using sizeof(Dwarf_Unsigned) or sizeof(Dwarf_Half).
      Making it clearer we're reading the size the standard
      says the items are.
2018-06-14 David Anderson
    * libdwarf.h.in: Simplified definitions of Dwarf_Unsigned etc
      and DW_PR*.
2018-06-12 David Anderson
    * dwarf_arange.c dwarf_base_types.h dwarf_die_deliv.c,
      dwarf_dnames.c,dwarf_form.c,dwarf_frame.c,dwarf_global.c,
      dwarf_line_table_reader_common.h,dwarf_loc.c,dwarf_macro5.c,
      dwarf_opaque.h,dwarf_str_offsets.c,dwarf_util.c,libdwarfdefs.h,
      pro_arange.c,pro_section.c,pro_types.c,pro_util.h:
      Now, if Dwarf_Half is not defined 16 bits it is likely
      that everything will still work right.
      We don't use sizeof(Dwarf_Half) now.
2018-06-12 David Anderson
    * libdwarf.h.in: Removed Dwarf_Frame_Op3
      struct declaration. It was never used
      and was a bad idea. A functional interface
      is a likely replacement.
2018-05-30 David Anderson
    * Fix botch in revised Makefile.in.
2018-05-30 David Anderson
    * Makefile.in: Add gennames dependency on libdwarf_version.h
    * libdwarf_version.h: Create to hold the
      DW_VERSION_DATE_STR string.
2018-05-26 David Anderson
    * gennames.c:
      Update version string
    * dwarf_arange.c: Instead of load_section(dbg,.debug_info, 
      and then *_abbrevr, call the combined _info and _abbrev 
      function _dwarf_load_debug_info() as is done everywhere else.
2018-05-24 David Anderson
    * dwarf_aranges.c: Calling dwarf_get_aranges() 
      without loading .debug_info and .debug_abbrev
      resulted in an error when checking for the
      sanity of an offset into .debug_info: 
      DW_DLE_ARANGE_OFFSET_BAD.
      Now libdwarf ensures the needed sections are loaded
      because the 'section length' of compressed
      sections is only correct after such are loaded.
2018-05-17 David Anderson
    * config.h.in: Added #undef HAVE_VSNPRINTF HAVE_SNPRINTF
    * configure: regenerated.
    * configure.ac: Added AC_CHECK_FUNCS(snprintf) 
      AC_CHECK_FUNCS(vsnprintf)
    * dwarf_alloc.c(_dwarf_free_all_of_one_debug): Added fclose
      of dbg->de_printf_callback_null_device_handle.
    * dwarf_opaque.h: Added de_printf_callback_null_device_handle
      Dwarf_Debug member.
    * dwarf_arange.c,dwarf_die_deliv.c,dwarf_frame2.c,
      gennames.c: Use static buffers, not on-stack char
      array targets for sprintf/snprintf.
      Testing HAVE_SNPRINTF(HAVE_VSNPRINTF) and use c99 function 
      if present, else c90
    * dwarf_util.c:  Putting  null_device_handle in Dwarf_Debug 
      struct Use static buffers, not on-stack char array targets for
      sprintf/snprintf.
      Testing HAVE_SNPRINTF(HAVE_VSNPRINTF) and use c99 function 
      if present, else c90.
2018-05-16 David Anderson
    * dwarf_leb.c, dwarf_util.c: Removed use of C99
      like vsnprintf. Now using C90.
2018-05-15 David Anderson
    * dwarf_incl.h: Inserted <stddef.h> include here.
      stddef.h defines really basic useful C90 things like NULL. 
    * dwarf_opaque.h: Remove nested include stddef.h.
2018-05-15 David Anderson
    * dwarf_incl.h: Removed dwarf_alloc.h include
    * dwarf_abbrev.c,dwarf_alloc.c,dwarf_arange.c,dwarf_die_deliv.c,
      dwarf_dnames.c,dwarf_dsc.c,dwarf_error.c,dwarf_form.c dwarf_frame.c,
      dwarf_frame2.c,dwarf_gdbindex.c,dwarf_global.c,dwarf_incl.h,
      dwarf_init_finish.c,dwarf_line.c,dwarf_loc.c,dwarf_macro.c,
      dwarf_macro5.c,dwarf_print_lines.c,dwarf_query.c,dwarf_ranges.c,
      dwarf_str_offsets.c,dwarf_util.c,dwarf_xu_index.c:
      Added explicit include dwarf_alloc.h.
2018-05-15 David Anderson
    * Makefile.in: dwarf_frame3.c now gone from build.
      It should be removed. Nothing in it is used.
    * dwarf_incl.h: Removed dwarf_error.h include
    * dwarf_*: put includes in local normal order
      and added include dwarf_error.h as needed
      (in many files).
2018-05-15 David Anderson
    * dwarf_incl.h: Removed dwarf_util.h include
    * dwarf_abbrev.c,dwarf_alloc.c,dwarf_arange.c,dwarf_die_deliv.c,
      dwarf_dnames.c,dwarf_form.c,dwarf_frame.c,dwarf_frame2.c,
      dwarf_gdbindex.c,dwarf_global.c,dwarf_init_finish.c,dwarf_line.c,
      dwarf_loc.c,dwarf_macro5.c,dwarf_print_lines.c,dwarf_query.c,
      dwarf_ranges.c,dwarf_str_offsets.c,dwarf_util.c,dwarf_xu_index.c,
      dwarf_string.c,dwarf_macro.c: Added include dwarf_util.h.
2018-05-15 David Anderson
    * dwarf_die_deliv.c,dwarf_dsc.c,dwarf_error.c,
      dwarf_init_finish.c,dwarf_original_elf_init.c,
      pro_error.c,pro_line.c: Removed the unnecessary
      inclusion of elf.h. 
    * dwarf_incl.h: Removed the unnecessary
      inclusion of elf.h, limits.h, and dwarf_xu_index.h. 
2018-05-15 David Anderson
    * dwarf_abbrev.c,dwarf_alloc.c,dwarf_die_deliv.c,
      dwarf_dsc.c,dwarf_dsc.h,dwarf_elf_access.c,dwarf_error.h,
      dwarf_gdbindex.h,dwarf_global.h,dwarf_groups.c,
      dwarf_harmless.c,dwarf_harmless.h,dwarf_leb.c,dwarf_loc.h,
      dwarf_loc2.h,dwarf_opaque.h,dwarf_print_lines.c,
      dwarf_ranges.c,dwarf_string.c,dwarf_tsearch.h,
      dwarf_tsearchhash.c,dwarf_util.c,dwarf_xu_index.c,
      dwarf_xu_index.h,pro_alloc.c,pro_die.h,pro_finish.c,
      pro_util.h: Removed trailing blank lines.
      Updated copyright year.
2018-05-15 David Anderson
    * dwarf_loc2.c, dwarf_line_table_reader_common.c,
      dwarf_errmsg_list.c: Renamed to end in .h, not .c,
      as these are all targets of #include.
    * dwarf_test_errmsg_list.c: New file with the test code
      extracted from dwarf_errmsg_list.c and #including
      the new dwarf_errmsg_list.h
    * Makefile.in: Renamings .c to .h and the errmsg checking
      builds the new dwarf_test_errmsg_list.c
      The -DTESTING in building dwarf_test_errmsg_list.c
      is no longer necessary.
    * dwarf_error.c, dwarf_line.c,dwarf_print_lines.c:  
      Reflect the .c->h renamings
2018-05-14 David Anderson
    * libdwarf.h.in: Removed trailing whitespace.
2018-05-14 David Anderson
    * libdwarf2.1.mm: Documented dwarf_get_fde_info_for_reg3_b().
      Refined some comments about frame data.
    * libdwarf2.1.pdf: Regenerated. Version 2.64
2018-05-14 David Anderson
    * gennames.c: Updated version string.
2018-05-14 David Anderson
    * dwarf_frame2.c: Do a thorough check of every non-zero
      augmentation data length in a way that will catch
      integer overflows.
    * dwarf_str_offsets.c: Fixed a botch in the original
      dwarf_dealloc in dwarf_close_str_offsets_table_access().
2018-05-14 David Anderson
    * dwarf_frame.c: Implemented dwarf_get_fde_info_for_reg3_b().
    * libdwarf.h.in: Fixed arg list for dwarf_get_fde_info_for_reg3_b.
2018-05-14 David Anderson
    * libdwarf.h.in: Declare new frame function,
      next commit will have the code in dwarf_frame.c.
2018-05-01 Carlos Alberto Enciso
    * gennames.c: Reversed the order of calling process_args()
      vs print_args(). There is no visible difference for
      linux/unix, and is just to match the convention
      now used in dwarfdump for the ordering.  
2018-04-22 David Anderson
    * gennames.c: Updated version string.
    * libdwarf.h.in: Removed trailing comma from enumeration list.
2018-04-19 David Anderson
    * dwgetopt.c: Changed to match correction in dwarfdump version.
2018-04-17 David Anderson
    * dwgetopt.c: Changed to match correction in dwarfdump version.
2018-04-16 David Anderson
    * dwarf_str_offsets.c: Removed debug call to dump_bytes()
    * gennames.c: Updated version string.
2018-04-14 David Anderson
    * CMakeLists.txt: Added new source/header files to cmake.
2018-04-14 David Anderson
    * libdwarf2.1.mm: Complete doc on the new .debug_str_offsets
      interfaces.
    * Regenerated. Rev 2.63.
2018-04-13 David Anderson
    * gennames.c: Updated version string.
    * Makefile.in: Added dwarf_str_offsets.o to target list.
    * checkexamples.c: Added example code for the .debug_str_offsets
      section interfaces.
    * dwarf_alloc.h: Update ALLOC_AREA_INDEX_TABLE_MAX for new
      allocatable.
    * dwarf_alloc.c:Add #include and array entry for DW_DLA_STR_OFFSETS
    * libdwarf.h.in:
    * dwarf_errmsg_list.c: Added new .debug_str_offsets section
      reader error codes.
    * dwarf_str_offsets.h: New. Hidden struct for .debug_str_offsets
      interfaces.
    * dwarf_str_offsets.c: New for .debug_str_offsets.
    * libdwarf2.1.mm: Incomplete doc on the new interfaces.
2018-03-29 David Anderson
    * configure.ac: Now uses AC_COMPILE_IFELSE 
      instead of AC_TRY_COMPILE. Substantial changes
      along those lines.
    * config.h.in, configure: Regenerated.
2018-03-28 David Anderson
    * configure.ac: Replaces configure.in and
      uses AC_COMPILE_IFELSE instead of the
      deprecated AC_TRY_COMPILE.
    * configure: Regenerated.
    * config.h.in: Regenerated
2018-03-27 David Anderson
    * configure.in: Cross compiling tested, working.
    * configure: regenerated.
2018-03-25 David Anderson
    * configure.in: Support for cross compiling
    * configure: regenerated.
    * Makefile.in: Support for cross compiling
2018-03-25 David Anderson
    * Makefile.in: Add comments about what is built for build
      system (as opposed to host or target).
2018-03-24 David Anderson
    * checkexamples.c: This is just example code for
      libdwarf2.1.mm, not part of libdwarf. Now 
      checked by cc for errors and organized in the
      same order the examples appear in the .mm.
    * dwarf_errmsg_list.c: Added error code
      DW_DLE_LINE_HEADER_CORRUPT.
    * dwarf_line.c(_dwarf_set_line_table_regs_default_values):
      Add line-table header version number argument so the
      function works for DWARF5 (and earlier as well).
      Now uses dwarf_srclines_files_indexes() several places,
      simplifying the code.
    * dwarf_line.h: Adds new fields to Dwarf_Line_Context_s
      so that dwarf_srclines_files_indexes() logic is
      simple.
    * dwarf_line_table_reader_common.c: Passes version number
      to _dwarf_set_line_table_regs_default_values() so it
      works right for DWARF5 (and for earlier DWARF).
    * libdwarf.h.in: Added DW_DLE_LINE_HEADER_CORRUPT to
      error list. Added function dwarf_srclines_files_indexes().
    * libdwarf2.1.mm: Rev 2.61. Document the new function
      dwarf_srclines_files_indexes()
      and update all examples for formatting and correct C.
    * libdwarf2.1.pdf: Regenerated, Rev 2.61.
2018-03-22 David Anderson
    * dwarf_line.c, dwarf_print_lines.c: Index file
      numbers for all versions of DWARF (DWARF5
      indexes starting at 0).
2018-03-21 David Anderson
    * gennames.c: Updated version string.
2018-03-21 David Anderson
    * dwarf_elf_access.c: Allow for relocations on .debug_str_offsets.
    * dwarf_errmsg_list.c: Clarified meaning of
      DW_DLE_DIE_ABBREV_LIST_NULL, added new errors
      DW_DLE_STR_OFFSETS_BASE_WRONG_FORM,
      DW_DLE_DATA16_OUTSIDE_SECTION,
      DW_DLE_LNCT_MD5_WRONG_FORM
    * dwarf_form.c: Added support for DWARF5 new FORMs.
    * dwarf_line.c: Added dwarf_srclines_files_data_b()
      so clients needing DWARF5 line table support can
      get the DW_LNCT_MD5 value if it is present.
    * dwarf_line.h: Added support for the DWARF5
      MD5 data.
    * dwarf_line_table_reader_common.c: Added 
      DW_LNCT_MD5 support.
    * dwarf_opaque.h: Added _dwarf_extract_data16 so we do not
      have code duplication reading this data.
    * dwarf_print_lines.c: If MD5 present, we now print it.
    * dwarf_query.c: Correct handling of form for
      DW_AT_str_offsets_base.
    * dwarf_util.c: Add support for DWARF5 FORMs.
    * libdwarf.h.in: Define the values of the new
      DW_DLE codes mentioned above.
      Declare new function dwarf_srclines_files_data_b()
    * libdwarf2.1.mm: Document new function. Rev 2.61.
    * libdwarf2.1.pdf: Generated Rev 2.61
2018-01-05 David Anderson
    * dwarf_macro5.c(_dwarf_get_macro_ops_count_internal):
      A test duplicated the preceding loop condition so
      the body of the test was dead code. Removed the
      dead code.
2018-01-29 David Anderson
    * dwarf_arange.c: Improve and comment checks for
      stepping off the end of arange data.
    * dwarf_die_deliv.c: Make an error code 
      returned a bit more specific. 
      DW_DLA_DIE_BAD becomes DW_DLE_ABBREV_MISSING.
    * dwarf_errmsg_list.c: Added new error codes
      DW_DLE_ABBREV_MISSING DW_DLE_NO_TAG_FOR_DIE
      DW_DLE_LOWPC_WRONG_CLASS DW_DLE_HIGHPC_WRONG_FORM.
    * dwarf_form.c: Used DW_DLE_NO_TAG_FOR_DIE instead of
      DW_DLA_DIE_BAD to make an error return more specific.
    * dwarf_frame2.c: Add new checks for corrupted dwarf
      frame data.
    * dwarf_query.c: Added error check and changed
      DW_DLE_DIE_BAD to DW_DLE_ABBREV_MISSING in one place.
      Other DWARF corruption checks and error refinements added.
    * libdwarf.h.in: Added the defines for the new DW_DLE
      codes.
2018-01-29 David Anderson
    * gennames.c: Update version string.
=======
2019-04-22 David Anderson
      * dwarf_generic_init.c, dwarf_machoread.c,
        dwarf_object_detector.c,
        dwarf_object_read_common.c,dwarf_peread.c: Add test 
        for _MSC_VER for Windows MSVC.
2019-04-22   David Anderson
      * dwarf_frame.c: Add ifdef/include of stdint.h
        and inttypes.h and add casts using uintptr_t
        so we avoid some compiler warnings.
      * dwarf_groups.c,dwarf_tied.c,
        pro_alloc.c,pro_die.c,pro_init.c: Add ifdef/include
        of stdint.h
        and inttypes.h as the updated dwarf_tsearch.h
        requires uintptr_t.
      * dwarf_loc.c,pro_expr.c: Add ifdef/include of stdint.h
        and inttypes.h  so we can use uintptr_t
        in casts and avoid compiler warnings.
      * dwarf_tsearchhash.c: Add ifdef/include of stdint.h
        and inttypes.h for dwarf_tsearch.h so we can use uintptr_t
        in casts and avoid compiler warnings.
2019-04-21   David Anderson
      * dwarf_pe_descr.h: Added a comment specifying
        a MS web page describing
        how  the section data length and content is 
        calculated and handled.
      * dwarf_peread.c(pe_get_section_info): The understanding
        of the length of section data was overly simplistic.
        Now with all the bytes filled in properly in this function.
2019-04-21   David Anderson
      * dwarf_peread.c: Now getting pe section
        data returns a meaningful section virtual address.
2019-04-19   David Anderson
      * CMakeLists.txt: Add new files to the files to build.
      * Makefile.am: add the new .h and .c files.
      * dwarf_die_deliv.c(reloc_incomplete): Reformat
        the long 'if' to make it easier to read.
      * dwarf_elf_access.c: Remove the full list of
        relocations header files as no longer needed,
        include dwarf_elf_defines.h instead.
        Remove the
        is_??bit_abs_reloc() predicate functions. Move
        to  dwarf_elf_rel_detector. (renamed the functions).
      * dwarf_errmsg_list.h: Added 
        DW_DLE_SECTION_SIZE_ERROR,
        DW_DLE_INTERNAL_NULL_POINTER,
        DW_DLE_SECTION_STRING_OFFSET_BAD,
        DW_DLE_SECTION_INDEX_BAD, DW_DLE_INTEGER_TOO_SMALL,
        DW_DLE_ELF_SECTION_LINK_ERROR,DW_DLE_ELF_SECTION_GROUP_ERROR,
        DW_DLE_ELF_SECTION_COUNT_MISMATCH,
        DW_DLE_ELF_STRING_SECTION_MISSING,DW_DLE_SEEK_OFF_END,
        DW_DLE_READ_OFF_END for use by the nolibelf
        elf reader.
      * dwarf_generic_init.c: Now separates  
        archive access (using libelf) from non-archive (using
        no libelf).
      * dwarf_init_finish.c: Revamp commentary about 
        _dwarf_load_section.
      * dwarf_machoread.c: Renamed mo_byteorder to mo_endian
        for consistency. Added filesize to seek/read
        (RRMOA macro)for better checking of offset/size.
      * dwarf_machoread.h: Renamed mo_byteorder to mo_endian.
      * dwarf_object_detector.c: Added filesize to seek/read
        (_dwarf_object_read_random())
        for better checking of offset/size.
      * dwarf_object_read_common.c: Added additional checks
        of seek/read to ensure offset correctness.
        Seek itself allows seeking past end, which we
        do not want.
      * dwarf_object_read_common.h: Added filesize to
        _dwarf_object_read_random argument list.
      * dwarf_opaque.h: Removed trailing whitespace.
        Added _dwarf_elf_nlsetup() declaration for non-libelf.
      * dwarf_original_elf_init.c: Added ifdef so calls
        do not get warnings when only non-libelf.
      * dwarf_peread.c: Renamed pe_byteorder to pe_endian
        forconsistency.  Added filesize arg to
        _dwarf_object_read_random calls.
      * dwarf_peread.h: Renamed pe_byteorder to pe_endian
        for consistency.
      * dwarf_reading.h: Now RRMOA macro adds filesize
        argument.
      * libdwarf.h.in: Added error codes DW_DLE_SECTION_SIZE_ERROR,
        DW_DLE_INTERNAL_NULL_POINTER,DW_DLE_SECTION_STRING_OFFSET_BAD,
        DW_DLE_SECTION_INDEX_BAD,DW_DLE_INTEGER_TOO_SMALL,
        DW_DLE_ELF_SECTION_LINK_ERROR,DW_DLE_ELF_SECTION_GROUP_ERROR,
        DW_DLE_ELF_SECTION_COUNT_MISMATCH,
        DW_DLE_ELF_STRING_SECTION_MISSING,DW_DLE_SEEK_OFF_END,
        DW_DLE_READ_OFF_END          
      * memcpy_swap.h: Returned the function declarations
        to be a single long line each.
      * dwarf_elf_rel_detector.h, dwarf_elf_rel_detector.c:
        Refactored relocation tests determing whether
        the relocation was 32bit or 64bit.
      * dwarf_elf_reloc_386.h,
        dwarf_elf_reloc_aarch64.h,dwarf_elf_reloc_arm.h,
        dwarf_elf_reloc_mips.h,dwarf_elf_reloc_ppc64.h,
        dwarf_elf_reloc_ppc.h,dwarf_elf_reloc_sparc.h,
        dwarf_elf_reloc_x86_64.h: Complete lists
        of relocation types. 
        These are no longer needed by libdwarf, but
        for now remain here.  They were once needed
        for builds lacking a sufficiently complete
        elf.h.
      * dwarf_elfstructs.h: struct declarations for
        the standard Elf structs, but using character
        arrays, not integers. Assures we always have the
        correct lengths independent of integer sizes.
      * dwarf_elf_defines.h:  A basic set of Elf defines
        so the producer code has all it needs.
        Used by the Elf readers (libelf and nolibelf).
      * dwarf_elfread.h: The internally-used set of
        structures that hold nolibelf Elf data.
        The fields are sized to hold 64bit and used for
        both 32bit and 64bit elf. Some extra fields exist
        so aspects that differ by 32/64 are recorded
        by 32/64 specific code so 
      * dwarf_elf_load_headers.c: Actually reads 32 and 64
        Elf and inserts the values into the structures
        declared in dwarf_elfread.h. 
      *	dwarf_elfread.c: This does the nolibelf setup
        and calls dwarf_elf_load_headers.c interfaces
        to help with setup.
2019-03-08   David Anderson
      * pro_section.c: Remove trailing whitespace.
2019-03-07   David Anderson
      * pro_section.c(_dwarf_pro_generate_debuginfo): Now when
        there are zero bytes to copy we do not call memcpy,
        as in that case the source pointer will be NULL.
2019-03-06   David Anderson
      * dwarf_form.c,dwarf_global.c: Removed trailing whitespace.
      * pro_init.c: Removed trailing whitespace and fixed indents.
      * pro_forms.c(dwarf_add_AT_any_value_uleb_a): Accidentally
        leftout dbg = ownerdie->di_dbg, resulting in a memory
        leak.
      * pro_frame.c(dwarf_new_fde_a): Accidentally left out
        setting fde_dbg, resulting in a memory leak.
2019-03-04   David Anderson
      * dwarf.h:  Adding go-specifig type attributes
        DW_AT_go_kind,DW_AT_go_key,DW_AT_go_elem,
        DW_AT_go_embedded_field,DW_AT_go_runtime_type.
        Added error code DW_DLE_RETURN_EMPTY_PUBNAMES_ERROR.
      * dwarf_errmsg_list.h:
        Added error code DW_DLE_RETURN_EMPTY_PUBNAMES_ERROR.
      * dwarf_global.c: Updates new fields in the hidden struct
        with pubnames(etc) context data and makes it possible
        to see the CU headers there, even if there are no
        actual variables listed for a CU (a fake record
        returned in that case). The change in output
        records (the fake records) only appear if
        the caller has requested such by a call to
        xxxxx
        Implements dwarf_get_globals_header() so a caller
        like dwarfdump can print such section headers.
        Implements dwarf_return_empty_pubnames()
        which just sets a flag so a caller
        like dwarfdump can request such empty sections
        return a useful fake entry.
      * dwarf_global.h: Adds fields like pu_length, pu_version
        so pubnames(etc) sections can have  their cu header
        data returned.
      * dwarf_line.c:  Adds explicit calls to dwarf_dealloc
        in error cases to avoid leaving the allocated memory
        hanging around until dwarf_finish().
      * dwarf_names.c,dwarf_names.h, dwarf_names_enum.h,
        dwarf_names_new.h: Regenerated to create the new attributes
        for the Go language.
      * dwarf_opaque.h: Adds  flag de_return_empty_pubnames to
        Dwarf_Debug_s struct so libdwarf can know when fake
        records for CUs with no entries are wanted by
        callers.
      * libdwarf.h.in: Added error code DW_DLE_RETURN_EMPTY_PUBNAMES_ERROR.
        Declares dwarf_return_empty_pubnames() and
        dwarf_get_globals_header() so callers (like dwarfdump)
        can see and access all pubnames(etc)section CU headers.
      * libdwarf2.1.mm: Version 2.71. Documents the new functions.
        Revises the contest structure a little so all the pubnames-like
        sections are documented as a related group of functions.
      * libdwarf2.1.pdf: Regenerated. Version 2.71.
      * libdwarf_version.h: New date string.
2019-02-26   David Anderson
      * dwarf.h: Added go language specific attributes.
      * dwarf_line.c(dwarf_srcfiles): Dealloc stmt_list_attr 
        as soon as we lose interest in it instead of waiting
        for dwarf_finish() to be called.
2019-02-24   David Anderson
      * libdwarf_version.h: Updated date string.
      * dwarf_names.c,dwarf_names.h, dwarf_names_enum.h,
        dwarf_names_new.h: Regenerated with latest date string.
2019-02-18   David Anderson
      * configure.cmake: Now always defines DWARF_WITH_LIBELF
        so builds work as always.
      *	dwarf_elf_access.c,dwarf_generic_init.c,
        dwarf_original_elf_init.c,
	pro_incl.h,pro_init.c,pro_reloc_stream.c: Now these use
        DWARF_WITH_LIBELF tests to build properly when 
        libelf is to be used.
2019-02-18   David Anderson
      * pro_incl.h: Added comments on tests of HAVE_ELF_H
        and the LIBELF_H macros and the #include of 
        the Elf/libelf headers.
2019-02-18   David Anderson
      * pro_reloc_stream.h: Was testing ifdef HAVE_ELF_H, which
        is unnecessary as it does not use any elf.h types.
2019-02-12   David Anderson
      * dwarf_form.c: Implement dwarf_uncompress_integer_block_a()
        with the proper return type (int). Use this instead
        of the old dwarf_uncompress_integer_block().
      * libdwarf.h.in: Declare dwarf_uncompress_integer_block_a()
        and dwarf_uncompress_integer_block_a().
      * pro_forms.c: Implment the two new functions.
2019-02-10   David Anderson
      * dwarf_errmsg_list.h,libdwarf.h.in: Adding
        DW_DLE_NO_STREAM_RELOC_SUPPORT error code.
      * pro_alloc.c,pro_arange.c,pro_die.c,pro_dnames.c,
	pro_error.c,pro_expr.c,pro_finish.c,pro_forms.c,
	pro_frame.c,pro_funcs.c,pro_init.c,pro_line.c,
	pro_macinfo.c,pro_pubnames.c,pro_reloc.c,
	pro_reloc_symbolic.c,pro_section.c,pro_types.c,
	pro_vars.c,pro_weaks.c:
        Removed the ifdef HAVE_ELF_H in most places
        as we can really build everything without elf.h
        except pro_reloc_stream.c (which retains
        the big ifdef HAVE_ELF_H on the whole file).
        Now only a couple files have ifdef HAVE_ELF_H
      * pro_reloc_stream.h: Hiding the function decls
        with ifdef HAVE_ELF_H 
2019-02-10   David Anderson
      * dwarf_errmsg_list.h,dwarf_generic_init.c:
        Removed trailing whitespace on one line.
      * dwarf_incl.h: Removed blank line
        and a duplicated include statement.
2019-02-10   David Anderson
      * pro_alloc.c,pro_arange.c,pro_die.c,pro_dnames.c,
        pro_error.c,pro_expr.c,pro_finish.c,pro_forms.c,
        pro_frame.c,pro_funcs.c,pro_incl.h,pro_init.c,
        pro_line.c,pro_macinfo.c,pro_pubnames.c,pro_reloc.c,
        pro_reloc_stream.c,pro_reloc_symbolic.c,pro_section.c,
        pro_types.c,pro_vars.c,pro_weaks.c: Now pro_incl.h
        is almost entirely just #defines and each .c
        brings in just the headers it really wants.
2019-02-10   David Anderson
      * dwarf_names.c,dwarf_names.h,dwarf_names_enum.h,
	dwarf_names_new.h: Datestring update.
      * libdwarf_version.h: Updated date string
2019-02-07   David Anderson
      * dwarf_elf_access.c, pro_alloc.c, pro_arange,c,pro_die.c,
        pro_dnames.c,pro_error.c,pro_xpr.c,pro_finish.c,
        pro_forms.c,pro_frame.c, pro_funcs.c,pro_init.c,
        pro_line.c,pro_macinfo.c,pro_pubnames.c,pro_reloc.c,
        pro_reloc_stream.c, pro_reloc_symbolic.c,pro_section.c,
        pro_types.c,pro_vars.c,pro_weaks.c:
        Ifdef (entire file after include config.h)
         HAVE_ELF_H so libdwarf compiles without HAVE_ELF_H
      * pro_encode_nm.c: Get rid nested includes, include just
        what is needed.
      * dwarf_generic_init.c: Moved dwarf_set_tied_dbg() here 
        and ifdef HAVE_ELF_H so 
        libdwarf compiles without HAVE_ELF_H
      * dwarf_original_elf_init.c: ifdef HAVE_ELF_H so
        we can emit an error if no Elf: DW_DLE_NO_ELF_SUPPORT.
      * dwarf_errmsg_list.h: Add new error DW_DLE_PRODUCER_CODE_NOT_AVAILABLE
        to display if an attempt is made to open an elf object
        when libdwarf built without HAVE_ELF_H. And add
        DW_DLE_NO_ELF_SUPPORT.
      * libdwarf.h.in: Add DW_DLE_PRODUCER_CODE_NOT_AVAILABLE and
        DW_DLE_NO_ELF_SUPPORT.
2019-01-31   David Anderson
      * dwarf_alloc.c, dwarf_die_deliv.c,dwarf_dnames.c, dwarf_dsc.c,
        dwarf_elf_access.c,dwarf_frame.c,dwarf_frame2.c,
        dwarf_gdbindex.c,dwarf_generic_init.c,dwarf_init_finish.c,
        dwarf_line.c,dwarf_loc.c,dwarf_loc2.h,dwarf_machoread.c,
        dwarf_macro.c,dwarf_macro5.c,dwarf_opaque.h,dwarf_peread.c,
        dwarf_tsearchhash.c,dwarf_util.c,dwarf_xu_index.c,pro_alloc.c,
        pro_arange.c,pro_expr.c,pro_line.c,pro_macinfo.c,
        pro_section.c,pro_types.c: Fixed 56 bugs found
        by llvm's scan-build tool.
2019-01-27   David Anderson
      * dwarf_form.c,dwarf_gdbindex.c,dwarf_object_read_common.c,
        pro_forms.c,pro_section.c: Remove trailing whitespace.
2019-01-27   David Anderson
      * dwarf_object_read_common.c,dwarf_object_read_common.h:
        Now uses the ISO (1990) datatypes off_t and size_t and
        ssize_t for lseek, read.
2019-01-20   David Anderson
      * dwarf_base_types.h: Remove Dwarf_ufixed and 
        Dwarf_sfixed and all __int32_t and __uint32_t use.
        __uint64_t Dwarf_ufixed64 and __int64_t Dwarf_sfixed64
        have also been removed.
      * dwarf_elf_access.c: Remove use of those types here too.
      * dwarf_form.c: Remove references to those types here
        too.
      * dwarf_gdbindex.c, dwarf_gdbindex.h: Replace 
        gdbindex_offset_type headerval[6]
        by char gfs[4][6] (replacing dependence on the  int32
        sorts of types.
      * dwarf_macho_loader.h: Clarified that the uint32_t sorts
        of things are just comments.
      * libdwarf.h.in: Fixed a too-long comment line.
      * libdwarfdefs.h: Removed all the *UINT32* and
        *uint64* use.
      * pro_forms.c,pro_opaque, pro_section.c: 
        Removed all the Dwarf_sfixed and ufixed
        stuff here too.
2019-01-14   David Anderson
     * dwarf_frame.c: Add support for DW_CFA_MIPS_advance_loc8
       (though pointless, really) so we can test all the code
       paths of advance_loc production. 
     * dwarf_frame2.c: Minor formatting cleanup.
     * dwarf_line_table_reader_common.h: Now tests for
       negative line numbers in the table and returns an error
       with the new error code DW_DLE_LINE_TABLE_LINENO_ERROR
       (which indicates a corrupted line table).
     * dwarf_names.c, dwarf_names.h, dwarf_names_enum.h,
       dwarf_names_new.h: Regenerated. Just an update of
       the sourcedate comment.
     * dwarf_opaque.h: Delete a trailing whitespace character.
     * libdwarf.h.in: Add error DW_DLE_LINE_TABLE_LINENO_ERROR.
     * pro_expr.c: Remove trailing whitespace.
     * pro_frame.c( dwarf_add_fde_inst_a): A new simpler 
       more portable implementation of the DW_CFA_advance_loc
       code.
     * pro_opaque.h: Delete blank last line.
2019-01-12   David Anderson
     * dwarf_abbrev.c,dwarf_abbrev.h,dwarf_base_types.h,
       dwarf_die_deliv.c, dwarf_dsc.c,dwarf_error.c,
       dwarf_error.h,dwarf_form.c,dwarf_frame.c,
       dwarf_frame.h,dwarf_frame2.c,dwarf_global.h,
       dwarf_leb.c,dwarf_line.c,dwarf_line.h,
       dwarf_line_table_reader_common.h,dwarf_loc.c,
       dwarf_loc2.h,dwarf_macro5.c,dwarf_macro5.h,dwarf_opaque.h,
       dwarf_print_lines.c,dwarf_query.c,dwarf_util.c,dwarf_util.h,
       pro_arange.c,pro_error.c,pro_error.h,pro_expr.c,
       pro_forms.c,pro_frame.c,pro_frame.h,pro_line.h,
       pro_opaque.h,pro_reloc_stream.c,pro_section.c,
       pro_types.c: Removed all instances of use of
       Dwarf_Word, Dwarf_Sword, __int32_t (and other such).
       In nearly all cases the use was gratuitous. In a few
       cases some very old code was problematic (dwarf_frame2.c)
       and is fixed.
2019-01-10   David Anderson
     * libdwarf_version.h: New date string.
2019-01-09   David Anderson
     * dwarf_original_elf_init.c: One of the calls to
       dwarf_object_init_b() was checking the result code
       then doing a statment that will crash the caller unless
       the result code was DW_DLV_OK.
2019-01-05   David Anderson
     * dwarf_generic_init.c: Removed trailing whitespace.
2019-01-04   David Anderson
     * dwarf_generic_init.c: After closing de_fd,
       set de_owns_fd FALSE as an extra guard.
2019-01-04   David Anderson
     * dwarf_object_detector.c: Ensure the configure
       can set O_BINARY if necessary so open() will use it.
2019-01-04   David Anderson
     * dwarf_elf_access.c,dwarf_generic_init.c,dwarf_machoread.c,
       dwarf_opaque.h,dwarf_peread.c: Simplified and unified
       the requirement that dwarf_finish() close the fd
       that dwarf_init_path() opened.
2019-01-04   David Anderson
     * configure.ac: Version 20190104
     * dwarf_elf_access.c: Now records that libdwarf owns
       its fd in the elf case and arranges to close it
       when the Dwarf_Debug is being closed.
       This is the case of dwarf_init_path().
       Hopefully will address Coverity CID 190599.
     * dwarf_object_detector.c: Now that struct stat
       is not in use delete the sys/types.h and sys/stat.h
       includes as they are no longer needed.
     * dwarf_generic_init(dwarf_init_path): When libdwarf 
       owns the fd, call _dwarf_elf_record_owned_fd()
       to record that information.
       In the default case (not a known object type)
       we also now close the fd.
     * dwarf_opaque.h: Add prototype for 
       _dwarf_elf_record_owned_fd, a new internal function
       so the fd can be closed by libdwarf only when 
       libdwarf owns it.
     * libdwarf_version.h: New date string.
>>>>>>> master

2019-01-03   David Anderson
     * dwarf_object_detector.c: Had a pointless call to stat()
       which was noticed by Coverity CID  190601
       as a possible race condition. Deleted the call.
     * dwarf_generic_init(dwarf_init_path):
       Serious bugs introduced yesterday.
       Coverity CID 190600.
       the fd is remembered in the Dwarf_Debug
       being created and will eventually be closed
       when the Dwarf_Debug is closed.
2019-01-02   David Anderson
     * dwarf_die_deliv.c(dwarf_get_real_section_name): 
       Uninitialized local char array
       could lead to unpredictable behavior, so now initialized
       with a NUL first byte so the array is a legal string.
       Coverity CID CID 190598.
     * ChangeLog: Renamed ChangeLog2018. New ChangeLog created.
     * Makefile.am: Added ChangeLog2018 to files in dist.
     * gennames.c(GenerateOneSet): Fixing Coverity CID 190603
       by removing an unused (unusable) value. 
     * dwarf_machoread.c.The include order
       is now libdwarfdefs.h then dwarf_base_types.h
     * dwarf_peread.c: The include order
       is now libdwarfdefs.h then dwarf_base_types.h
       Was leaking memory re-malloc into local var
       localdoas. Coverity CID 190602.
     * dwarf_generic_init.c(dwarf_init_path): 
       We clarify the use of fd and in case
       of failure ensure we close the fd if
       it is open (fd >= 0). 
     * dwarf_object_detector.c(dwarf_object_detector_path):
       Mistaken 'fix'
     * libdwarf_version.h: Updated version string.
